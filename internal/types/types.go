// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5

package types

type Base struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type ChapterScoreWithAvg struct {
	Chapter      int     `json:"chapter"`
	StudentScore float64 `json:"student_score"`
	AvgScore     float64 `json:"avg_score"`
}

type Chat struct {
	Title     string    `json:"title"`
	CreatedAt string    `json:"created_at"`
	UpdatedAt string    `json:"updated_at"`
	Messages  []Message `json:"chat_history"`
}

type ChatAnswer struct {
	Message string `json:"message"`
}

type ChatHistory struct {
	SessionID    int       `json:"session_id"`
	TotalPageNum float64   `json:"total_page_num"`
	ChatHistory  []History `json:"chat_history"`
}

type ChatList struct {
	ID        uint   `json:"id"`
	Title     string `json:"title"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type CheckFileMD5Req struct {
	MD5      string `form:"md5"`
	FileName string `form:"file_name"`
}

type CheckFileMD5Resp struct {
	Base
	Data FileMD5 `json:"data"`
}

type ClassList struct {
	ClassList []string `json:"class_list"`
}

type ClassPerformance struct {
	ClassAvgGradePoint float64          `json:"class_avg_grade_point"`
	CourseAvgScores    []CourseAvgScore `json:"course_avg_scores"`
}

type CollectFileReq struct {
	Ids []int `json:"ids"`
}

type CollectFileResp struct {
	Base
	Data string `json:"data"`
}

type CompleteDelDiskFileReq struct {
	Ids []int `json:"ids"`
}

type CompleteDelDiskFileResp struct {
	Base
	Data string `json:"data"`
}

type CountPerformanceNumber struct {
	ExcellentCount int `json:"excellent_count"`
	GoodCount      int `json:"good_count"`
	PassCount      int `json:"pass_count"`
	FailCount      int `json:"fail_count"`
}

type Course struct {
	ID                 int      `json:"id"`
	CourseNumber       string   `json:"course_number"`
	CourseName         string   `json:"course_name"`
	CourseImg          string   `json:"course_img"`
	CourseIntroduction string   `json:"course_introduction"`
	CourseClass        string   `json:"course_class"`
	CourseType         int      `json:"course_type"`
	CourseAddr         string   `json:"course_addr"`
	LecturerProfile    string   `json:"lecturer_profile"`
	Credit             string   `json:"credit"`
	AcademicYear       string   `json:"academic_year"`
	AcademicTerm       int      `json:"academic_term"`
	Week               string   `json:"week"`
	Weekday            string   `json:"weekday"`
	Section            string   `json:"section"`
	IsCompleted        bool     `json:"is_completed"`
	Classes            []string `json:"classes"`
}

type CourseAvgScore struct {
	CourseID   uint    `json:"course_id"`
	CourseName string  `json:"course_name"`
	AvgScore   float64 `json:"avg_score"`
}

type CourseTable struct {
	CourseName  string `json:"course_name"`
	CourseClass string `json:"course_class"`
	CourseType  int    `json:"course_type"`
	CourseAddr  string `json:"course_addr"`
	Credit      string `json:"credit"`
	Week        string `json:"week"`
	Weekday     string `json:"weekday"`
	Section     string `json:"section"`
}

type CreateChatTopicReq struct {
	Topic string `json:"topic"`
}

type CreateChatTopicResp struct {
	Base
	Data string `json:"data"`
}

type CreateCourseReq struct {
	CourseNumber       string   `json:"course_number"`
	CourseName         string   `json:"course_name"`
	CourseImg          string   `json:"course_img"`
	CourseIntroduction string   `json:"course_introduction"`
	CourseClass        string   `json:"course_class"`
	CourseType         int      `json:"course_type"`
	CourseAddr         string   `json:"course_addr"`
	LecturerProfile    string   `json:"lecturer_profile"`
	Credit             string   `json:"credit"`
	AcademicYear       string   `json:"academic_year"`
	AcademicTerm       int      `json:"academic_term"`
	Week               string   `json:"week"`
	Weekday            string   `json:"weekday"`
	Section            string   `json:"section"`
	Classes            []string `json:"classes"`
}

type CreateCourseResp struct {
	Base
	Data string `json:"data"`
}

type CreateDiskDirectoryReq struct {
	Name     string `json:"name"`
	Path     string `json:"path"`
	ParentID int    `json:"parent_id"`
}

type CreateDiskDirectoryResp struct {
	Base
	Data DirectoryInfo `json:"data"`
}

type CreateGraphNodeRelationShipReq struct {
	StartNodeElementID string `json:"start node element id"`
	EndNodeElementID   string `json:"end node element id"`
	RelationshipType   string `json:"relationship_type"`
	Filename           string `json:"filename"`
}

type CreateGraphNodeRelationShipResp struct {
	Base
	Data NodeElementID `json:"data"`
}

type CreateGraphNodeReq struct {
	CreateInformation map[string]interface{} `json:"create_information"`
	NodeType          string                 `json:"node_type"`
	AuthorizationID   string                 `json:"authorization_id"`
}

type CreateGraphNodeResp struct {
	Base
	Data NodeElementID `json:"data"`
}

type CreateShareResourceReq struct {
	ResourceType int    `json:"resource_type"`
	Title        string `json:"title"`
	Content      string `json:"content"`
}

type CreateShareResourceResp struct {
	Base
	Data string `json:"data"`
}

type CreateStudentInfoReq struct {
	CourseID  int    `json:"course_id"`
	StudentID string `json:"student_id"`
	Name      string `json:"name"`
	College   string `json:"college"`
	Class     string `json:"class"`
	Major     string `json:"major"`
}

type CreateStudentInfoResp struct {
	Base
	Data string `json:"data"`
}

type CreateStudentScore struct {
	StudentID    string `json:"student_id"`
	RegularScore string `json:"regular_score"`
	FinalScore   string `json:"final_score"`
	TotalScore   string `json:"total_score"`
}

type CreateStudentScoreReq struct {
	CourseID     int                  `json:"course_id"`
	CreateScores []CreateStudentScore `json:"create_scores"`
}

type CreateStudentScoreResp struct {
	Base
	Data string `json:"data"`
}

type DelStudentInfoReq struct {
	StudentIDs []string `json:"student_ids"`
}

type DelStudentInfoResp struct {
	Base
	Data string `json:"data"`
}

type DeleteChatTopicReq struct {
	ID int `form:"id"`
}

type DeleteChatTopicResp struct {
	Base
	Data string `json:"data"`
}

type DeleteCourseReq struct {
	CourseID int `form:"course_id"`
}

type DeleteCourseResp struct {
	Base
	Data string `json:"data"`
}

type DeleteDiskFileReq struct {
	Ids []int `json:"ids"`
}

type DeleteDiskFileResp struct {
	Base
	Data string `json:"data"`
}

type DeleteGraphNodeRelationShipReq struct {
	ElementID string `form:"element_id"`
	Filename  string `form:"filename"`
}

type DeleteGraphNodeRelationShipResp struct {
	Base
	Data string `json:"data"`
}

type DeleteGraphNodeReq struct {
	ElementID       string `form:"element_id"`
	NodeType        string `form:"node_type"`
	Filename        string `form:"filename"`
	AuthorizationID string `form:"authorization_id"`
}

type DeleteGraphNodeResp struct {
	Base
	Data string `json:"data"`
}

type DeleteShareFileReq struct {
	FileUrl string `form:"file_url"`
}

type DeleteShareFileResp struct {
	Base
	Data string `json:"data"`
}

type DeleteShareResourceReq struct {
	ResourceID int `form:"resource_id"`
}

type DeleteShareResourceResp struct {
	Base
	Data string `json:"data"`
}

type DeleteStudentScoreReq struct {
	StudentIDs []string `json:"student_ids"`
	CourseID   int      `json:"course_id"`
}

type DeleteStudentScoreResp struct {
	Base
	Data string `json:"data"`
}

type DirectoryInfo struct {
	ID        uint   `json:"id"`
	Name      string `json:"name"`
	FileType  string `json:"file_type"`
	UpdatedAt string `json:"updated_at"`
	IsCollect bool   `json:"is_collect"`
}

type DiskDirectory struct {
	ID        uint   `json:"id"`
	Name      string `json:"name"`
	Path      string `json:"path"`
	Size      string `json:"size"`
	FileType  string `json:"file_type"`
	FileUrl   string `json:"file_url"`
	IsDir     bool   `json:"is_dir"`
	UpdatedAt string `json:"updated_at"`
	IsCollect bool   `json:"is_collect"`
}

type DiskDirectoryList struct {
	FileList []DiskDirectory `json:"file_list"`
	TotalNum int64           `json:"total_num"`
}

type Empty struct {
}

type ExportScoresReq struct {
	CourseID int `form:"course_id"`
}

type ExportScoresResp struct {
	Base
	Data FileUrl `json:"data"`
}

type FileInfo struct {
	ID             string `json:"id"`
	Name           string `json:"name"`
	Size           string `json:"size"`
	FileCount      int    `json:"file_count"`
	DirectoryCount int    `json:"directory_count"`
	Path           string `json:"path"`
	FileType       string `json:"file_type"`
	UpdatedAt      string `json:"updated_at"`
	FileUrl        string `json:"file_url"`
	IsCollect      bool   `json:"is_collect"`
}

type FileMD5 struct {
	Status     int               `json:"status"`
	UploadID   string            `json:"upload_id"`
	ObjectPart []MinioObjectPart `json:"object_part"`
}

type FileUrl struct {
	Url string `json:"url"`
}

type FindPasswordReq struct {
	Email       string `json:"email"`
	Code        string `json:"code"`
	NewPassword string `json:"new_password"`
}

type FindPasswordResp struct {
	Base
	Data string `json:"data"`
}

type GetChatAnswerReq struct {
	SessionID int    `json:"session_id"`
	Message   string `json:"message"`
}

type GetChatAnswerResp struct {
	Base
	Data ChatAnswer `json:"data"`
}

type GetChatHistoryReq struct {
	ID       uint `form:"id"`
	PageNum  int  `form:"page_num"`
	PageSize int  `form:"page_size"`
}

type GetChatHistoryResp struct {
	Base
	Data ChatHistory `json:"data"`
}

type GetChatListResp struct {
	Base
	Data []ChatList `json:"data"`
}

type GetClassListByCourseReq struct {
	CourseID int `form:"course_id"`
}

type GetClassListByCourseResp struct {
	Base
	Data ClassList `json:"data"`
}

type GetClassListResp struct {
	Base
	Data ClassList `json:"data"`
}

type GetClassPerformanceReq struct {
	Class string `form:"class"`
	Year  string `form:"year"`
	Term  int    `form:"term"`
}

type GetClassPerformanceResp struct {
	Base
	Data ClassPerformance `json:"class_performance"`
}

type GetCollectFileReq struct {
	PageNum  int `form:"page_num"`
	PageSize int `form:"page_size"`
}

type GetCollectFileResp struct {
	Base
	Data DiskDirectoryList `json:"data"`
}

type GetCountPerformanceNumberReq struct {
	Class      string `form:"class"`
	Year       string `form:"year"`
	Term       int    `form:"term"`
	CourseName string `form:"course_name"`
}

type GetCountPerformanceNumberResp struct {
	Base
	Data CountPerformanceNumber `json:"count_number"`
}

type GetCourseListResp struct {
	Base
	Data []Course `json:"data"`
}

type GetCourseTableReq struct {
	AcademicYear string `form:"academic_year"`
	AcademicTerm int    `form:"academic_term"`
	Week         int    `form:"week"`
}

type GetCourseTableResp struct {
	Base
	Data []CourseTable `json:"data"`
}

type GetDiskDirectoryReq struct {
	ParentID int `form:"parent_id"`
	PageNum  int `form:"page_num"`
	PageSize int `form:"page_size"`
}

type GetDiskDirectoryResp struct {
	Base
	Data DiskDirectoryList `json:"data"`
}

type GetDiskFileInfoReq struct {
	ID int `form:"id"`
}

type GetDiskFileInfoResp struct {
	Base
	Data FileInfo `json:"data"`
}

type GetFilesByTypeReq struct {
	FileType int `form:"file_type"`
	PageNum  int `form:"page_num"`
	PageSize int `form:"page_size"`
}

type GetFilesByTypeResp struct {
	Base
	Data DiskDirectoryList `json:"data"`
}

type GetMaterialGraphListReq struct {
	AuthorizationID string `form:"authorization_id"`
	GraphType       int    `form:"graph_type"`
}

type GetMaterialGraphListResp struct {
	Base
	Data interface{} `json:"data"`
}

type GetMaterialGraphReq struct {
	Filename        string `form:"filename"`
	AuthorizationID string `form:"authorization_id"`
}

type GetMaterialGraphResp struct {
	Base
	Data interface{} `json:"data"`
}

type GetPersonalInfoResp struct {
	Base
	Data PersonalInfo `json:"data"`
}

type GetRecycleDiskFileResp struct {
	Base
	Data []RecycleDiskFile `json:"data"`
}

type GetShareDirectoryReq struct {
	ParentID int `form:"parent_id"`
	PageNum  int `form:"page_num"`
	PageSize int `form:"page_size"`
}

type GetShareDirectoryResp struct {
	Base
	Data DiskDirectoryList `json:"data"`
}

type GetShareLinkReq struct {
	Link string `form:"link"`
	Code string `form:"code"`
}

type GetShareLinkResp struct {
	Base
	Data []DiskDirectory `json:"data"`
}

type GetShareResourceListReq struct {
	ResourceType int `form:"resource_type"`
}

type GetShareResourceListResp struct {
	Base
	Data []ShareResource `json:"data"`
}

type GetStudentChapterScoreReq struct {
	StudentID string `form:"student_id"`
	CourseID  int    `form:"course_id"`
}

type GetStudentChapterScoreResp struct {
	Base
	Data []ChapterScoreWithAvg `json:"data"`
}

type GetStudentInfoReq struct {
	CourseID int    `form:"course_id"`
	Class    string `form:"class"`
}

type GetStudentInfoResp struct {
	Base
	Data []StudentInfo `json:"data"`
}

type GetStudentListReq struct {
	Class string `form:"class"`
}

type GetStudentListResp struct {
	Base
	Data []Student `json:"data"`
}

type GetStudentScoreReq struct {
	CourseID int    `form:"course_id"`
	Class    string `form:"class"`
}

type GetStudentScoreResp struct {
	Base
	Data []StudentScore `json:"data"`
}

type GetStudentScoresReq struct {
	StudentID string `form:"student_id"`
}

type GetStudentScoresResp struct {
	Base
	Data []StudentScores `json:"data"`
}

type GetStudentTermGPAReq struct {
	StudentID string `form:"student_id"`
}

type GetStudentTermGPAResp struct {
	Base
	Data []TermGPA `json:"data"`
}

type GetUploadCertReq struct {
	FileName    string `form:"file_name"`
	MD5         string `form:"md5"`
	ContentType string `form:"content_type"`
}

type GetUploadCertResp struct {
	Base
	Data UploadCert `json:"data"`
}

type History struct {
	ID        uint   `json:"id"`
	Role      string `json:"role"`
	Message   string `json:"message"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type ImportScoresReq struct {
	CourseID int `form:"course_id"`
}

type ImportScoresResp struct {
	Base
	Data string `json:"data"`
}

type Link struct {
	Code string `json:"code"`
	Url  string `json:"url"`
}

type LoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResp struct {
	Base
	Data LoginToken `json:"data"`
}

type LoginToken struct {
	UserID uint   `json:"user_id"`
	Token  string `json:"token"`
}

type MergeFileReq struct {
	FileName    string `json:"file_name"`
	MD5         string `json:"md5"`
	UploadID    string `json:"upload_id"`
	ContentType string `json:"content_type"`
	ParentID    int    `json:"parent_id"`
	Path        string `json:"path"`
}

type MergeFileResp struct {
	Base
	Data FileInfo `json:"data"`
}

type Message struct {
	Role      string `json:"role"`
	Message   string `json:"message"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type MinioObjectPart struct {
	PartNumber int    `json:"part_number"`
	ETag       string `json:"e_tag"`
}

type MoveFileReq struct {
	Ids      []int `json:"ids"`
	ParentID int   `json:"parent_id"`
}

type MoveFileResp struct {
	Base
	Data string `json:"data"`
}

type NodeElementID struct {
	ElementID string `json:"element_id"`
}

type PersonalInfo struct {
	UserID    uint   `json:"user_id"`
	Username  string `json:"username"`
	Email     string `json:"email"`
	Avatar    string `json:"avatar"`
	CreatedAt string `json:"created_at"`
}

type PutDiskDirectoryReq struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type PutDiskDirectoryResq struct {
	Base
	Data string `json:"data"`
}

type PutPersonalInfoReq struct {
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type PutPersonalInfoResp struct {
	Base
	Data string `json:"data"`
}

type RecoverDiskFileReq struct {
	Ids []int `json:"ids"`
}

type RecoverDiskFileResp struct {
	Base
	Data string `json:"data"`
}

type RecycleDiskFile struct {
	ID        int    `json:"id"`
	Name      string `json:"name"`
	Size      string `json:"size"`
	DeletedAt string `json:"deleted_at"`
}

type RegisterReq struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type RegisterResp struct {
	Base
	Data string `json:"data"`
}

type SearchFilesReq struct {
	Key string `form:"key"`
}

type SearchFilesResp struct {
	Base
	Data []DiskDirectory `json:"data"`
}

type SearchMessagesReq struct {
	Key string `form:"key"`
}

type SearchMessagesResp struct {
	Base
	Data []Chat `json:"data"`
}

type SearchShareResourceReq struct {
	ResourceType int    `form:"resource_type"`
	Keyword      string `form:"keyword"`
}

type SearchShareResourceResp struct {
	Base
	Data []ShareResource `json:"data"`
}

type SendCodeReq struct {
	Email string `json:"email"`
}

type SendCodeResp struct {
	Base
	Data string `json:"data"`
}

type ShareLinkGenReq struct {
	Ids      []int  `json:"ids"`
	Validity int    `json:"validity"`
	Code     string `json:"code"`
}

type ShareLinkGenResp struct {
	Base
	Data Link `json:"data"`
}

type ShareResource struct {
	ID        int    `json:"id"`
	Username  string `json:"username"`
	Avatar    string `json:"avatar"`
	Title     string `json:"title"`
	Content   string `json:"content"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type StoreResourceReq struct {
	Ids      []int  `json:"ids"`
	ParentID int    `json:"parent_id"`
	Path     string `json:"path"`
}

type StoreResourceResp struct {
	Base
	Data string `json:"data"`
}

type StoreShareResourceReq struct {
	FileUrl  string `json:"file_url"`
	ParentID int    `json:"parent_id"`
	Path     string `json:"path"`
}

type StoreShareResourceResp struct {
	Base
	Data string `json:"data"`
}

type Student struct {
	StudentID string `json:"student_id"`
	Name      string `json:"name"`
	Class     string `json:"class"`
	Major     string `json:"major"`
}

type StudentInfo struct {
	StudentID string `json:"student_id"`
	Name      string `json:"name"`
	College   string `json:"college"`
	Class     string `json:"class"`
	Major     string `json:"major"`
}

type StudentScore struct {
	StudentID    string  `json:"student_id"`
	Name         string  `json:"name"`
	Class        string  `json:"class"`
	Major        string  `json:"major"`
	College      string  `json:"college"`
	RegularScore float64 `json:"regular_score"`
	FinalScore   float64 `json:"final_score"`
	TotalScore   float64 `json:"total_score"`
	CreditEarned bool    `json:"credit_earned"`
	GradePoint   float64 `json:"grade_point"`
}

type StudentScores struct {
	StudentID    string  `json:"student_id"`
	Name         string  `json:"name"`
	Class        string  `json:"class"`
	Major        string  `json:"major"`
	College      string  `json:"college"`
	CourseID     int     `json:"course_id"`
	CourseName   string  `json:"course_name"`
	RegularScore float64 `json:"regular_score"`
	FinalScore   float64 `json:"final_score"`
	TotalScore   float64 `json:"total_score"`
	Credit       string  `json:"credit"`
	CreditEarned bool    `json:"credit_earned"`
	GradePoint   float64 `json:"grade_point"`
	AcademicYear string  `json:"academic_year"`
	AcademicTerm int     `json:"academic_term"`
}

type SyncIndexByHandReq struct {
	IndexType int `json:"index_type"`
}

type SyncIndexByHandResp struct {
	Base
	Data string `json:"data"`
}

type TermGPA struct {
	AcademicYear string  `json:"academic_year"`
	AcademicTerm int     `json:"academic_term"`
	AvgGPA       float64 `json:"avg_gpa"`
	Rank         int     `json:"rank"`
	Percentile   float64 `json:"percentile"`
}

type UpdateChatTopicReq struct {
	ID       int    `json:"id"`
	NewTopic string `json:"new_topic"`
}

type UpdateChatTopicResp struct {
	Base
	Data string `json:"data"`
}

type UpdateCourseReq struct {
	ID                 int    `json:"id"`
	CourseNumber       string `json:"course_number"`
	CourseName         string `json:"course_name"`
	CourseImg          string `json:"course_img"`
	CourseIntroduction string `json:"course_introduction"`
	CourseClass        string `json:"course_class"`
	CourseType         int    `json:"course_type"`
	CourseAddr         string `json:"course_addr"`
	LecturerProfile    string `json:"lecturer_profile"`
	Credit             string `json:"credit"`
	AcademicYear       string `json:"academic_year"`
	AcademicTerm       int    `json:"academic_term"`
	Week               string `json:"week"`
	Weekday            string `json:"weekday"`
	Section            string `json:"section"`
	IsCompleted        bool   `json:"is_completed"`
}

type UpdateCourseResp struct {
	Base
	Data string `json:"data"`
}

type UpdateGraphNodeRelationShipReq struct {
	ElementID        string `json:"element_id"`
	RelationshipType string `json:"relationship_type"`
	Filename         string `json:"filename"`
}

type UpdateGraphNodeRelationShipResp struct {
	Base
	Data string `json:"data"`
}

type UpdateGraphNodeReq struct {
	UpdateInformation map[string]interface{} `json:"update_information"`
	NodeType          string                 `json:"node_type"`
	ElementID         string                 `json:"element_id"`
}

type UpdateGraphNodeResp struct {
	Base
	Data string `json:"data"`
}

type UpdatePasswordReq struct {
	OldPassword string `json:"old_password"`
	NewPassword string `json:"new_password"`
}

type UpdatePasswordResp struct {
	Base
	Data string `json:"data"`
}

type UpdateStudentInfoReq struct {
	StudentID string `json:"student_id"`
	Name      string `json:"name"`
	College   string `json:"college"`
	Class     string `json:"class"`
	Major     string `json:"major"`
}

type UpdateStudentInfoResp struct {
	Base
	Data string `json:"data"`
}

type UpdateStudentScore struct {
	StudentID    string `json:"student_id"`
	Name         string `json:"name"`
	Class        string `json:"class"`
	Major        string `json:"major"`
	College      string `json:"college"`
	RegularScore string `json:"regular_score"`
	FinalScore   string `json:"final_score"`
	TotalScore   string `json:"total_score"`
}

type UpdateStudentScoreReq struct {
	CourseID     int                  `json:"course_id"`
	UpdateScores []UpdateStudentScore `json:"update_scores"`
}

type UpdateStudentScoreResp struct {
	Base
	Data string `json:"data"`
}

type UploadCert struct {
	UploadID string `json:"upload_id"`
}

type UploadDiskFileReq struct {
	ParentID int    `form:"parent_id"`
	Path     string `form:"path"`
}

type UploadDiskFileResp struct {
	Base
	Data FileInfo `json:"data"`
}

type UploadFileReq struct {
	Type int `form:"type"`
}

type UploadFileResp struct {
	Base
	Data FileUrl `json:"data"`
}

type UploadShareFileResp struct {
	Base
	Data FileUrl `json:"data"`
}

type VerifyEmailReq struct {
	Email string `json:"email"`
	Code  string `json:"code"`
}

type VerifyEmailResp struct {
	Base
	Data string `json:"data"`
}
